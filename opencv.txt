estudar cmake de OpenCV

Principais funções:

1. Leitura e Escrita de Imagens
cv::imread(): Lê uma imagem de um arquivo.
cv::imwrite(): Salva uma imagem em um arquivo.

2. Exibição de Imagens
cv::imshow(): Exibe uma imagem em uma janela.
cv::waitKey(): Espera por uma tecla ser pressionada.

3. Processamento de Imagens
cv::cvtColor(): Converte uma imagem de um espaço de cores para outro (por exemplo, BGR para RGB, RGB para grayscale).
cv::resize(): Redimensiona uma imagem.
cv::rotate(): Rotaciona uma imagem.
cv::flip(): Inverte uma imagem horizontal ou verticalmente.

4. Filtros e Transformações
cv::GaussianBlur(): Aplica um filtro Gaussiano para suavização.
cv::medianBlur(): Aplica um filtro de mediana.
cv::threshold(): Aplica um limiar a uma imagem.
cv::Canny(): Detecta bordas em uma imagem usando o algoritmo de Canny.

5. Detecção de Características
cv::HoughLines(): Detecta linhas em uma imagem usando a Transformada de Hough.
cv::HoughCircles(): Detecta círculos em uma imagem.
cv::ORB(), cv::SIFT(), cv::SURF(): Detectores e descritores de características.

6. Detecção e Reconhecimento de Objetos
cv::CascadeClassifier(): Usado para detecção de objetos, como rostos, usando classificadores em cascata.
cv::dnn::readNet(): Carrega uma rede neural pré-treinada para tarefas de detecção e reconhecimento.

7. Segmentação de Imagens
cv::findContours(): Encontra contornos em uma imagem binária.
cv::drawContours(): Desenha contornos encontrados em uma imagem.

8. Transformações Geométricas
cv::warpAffine(): Aplica uma transformação afim a uma imagem.
cv::warpPerspective(): Aplica uma transformação de perspectiva a uma imagem.

9. Análise de Vídeo
cv::VideoCapture(): Captura vídeo de uma câmera ou arquivo.
cv::VideoWriter(): Grava vídeo em um arquivo.

10. Aprendizado de Máquina
cv::ml::SVM(): Implementação de Máquinas de Vetores de Suporte.
cv::ml::KNearest(): Implementação do algoritmo K-Nearest Neighbors.

11. Operações Morfológicas
cv::erode(): Erosão de uma imagem.
cv::dilate(): Dilatação de uma imagem.
cv::morphologyEx(): Aplica operações morfológicas complexas.

12. Transformações de Fourier
cv::dft(): Calcula a Transformada Discreta de Fourier de uma imagem.
cv::idft(): Calcula a Transformada Inversa de Fourier.

OpenCV:

Tutorial: https://agostinhobritojr.github.io/tutorial/pdi/

Curso: https://agostinhobritojr.github.io/curso/pdi/

3. Captura e Processamento de Imagens

Utilize funções do OpenCV para capturar imagens de câmeras ou processar imagens de satélites.

Exemplos de funções úteis incluem cv::imread() para ler imagens e cv::imshow() para exibi-las.

4. Análise de Imagens

Aplique técnicas de processamento de imagem, como filtragem, segmentação e detecção de bordas.

Utilize algoritmos como Canny para detecção de bordas ou cv::findContours() para identificar formas.

5. Detecção de Objetos e Reconhecimento

Implemente algoritmos de aprendizado de máquina ou redes neurais para detectar e classificar objetos em imagens.

O OpenCV oferece suporte a modelos pré-treinados que podem ser utilizados para reconhecimento de padrões.

6. Visualização e Interpretação de Dados

Utilize gráficos e visualizações para interpretar os dados processados.

O OpenCV permite desenhar formas e textos sobre as imagens para destacar informações importantes.

7. Testes e Validação

Realize testes rigorosos para validar a precisão dos algoritmos em diferentes condições de iluminação e ângulos de visão.

Considere a implementação de técnicas de aprendizado contínuo para melhorar a precisão ao longo do tempo.

8. Documentação e Manutenção

Documente seu código e as técnicas utilizadas para facilitar a manutenção e futuras atualizações.

Mantenha-se atualizado com as novas versões do OpenCV e as melhores práticas em visão computacional.

Estudo:

Máscara serve para selecionar ou modificar partes específicas de uma imagem, é binária sendo: branco (valor 255) a parte que deseja manter, e preto (valor 0) as áreas que serão ignoradas. 

Espaço HSV:
Hue (Matiz): Representa a cor propriamente dita, medido em graus de 0 a 360. Por exemplo, 0° é vermelho, 120° é verde, e 240° é azul.
Saturation (Saturação): Indica a intensidade da cor, variando de 0% (cinza) a 100% (cor pura).
Value (Valor): Refere-se ao brilho da cor, também variando de 0% (preto) a 100% (brilho máximo da cor).
É mais intuitivo para humanos em comparação com o espaço RGB.
Facilita a seleção de cores e a segmentação de imagens, pois permite manipular a cor, a intensidade e o brilho de forma mais direta.